import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class DCCardCSVParser {
	private static Pattern datePattern = Pattern.compile("([0-9]{4})\\/([0-9]{1,2})\\/([0-9]{1,2})");
	private static String startMark = "利用日";
	private List<TransactionEntry> entries = new LinkedList<TransactionEntry>();

	/**
	 * Parse CSV files generated by DC Web service.
	 * 
	 * @param args parameters for specifying target CSV files.
	 * @see <a href="https://club.dccard.co.jp/service/members/htmls/prp/login/prp.shtml">DC Web service</a>
	 */
	public static void main(String[] args) {

		// Show help?
		if (args.length < 1 || args.length > 2) {
			String cmd = "java -cp \"bin\" DCCardCSVParser";
			System.out.println("Usage:");
			System.out.print(cmd); System.out.println(" dirpath");
			System.out.print(cmd); System.out.println(" fiscal-year dirpath");
			return;
		}

		// Get parameters.
		int year;
		String format;
		if (args.length == 1) {
			year = Calendar.getInstance().get(Calendar.YEAR);
			format = Utils.getDirPath(args[0]);
		} else {
			year = Integer.valueOf(args[0]);
			format = Utils.getDirPath(args[1]);
		}
		format += "%04d%02d.csv";

		// Parse CSV files.
		DCCardCSVParser parser = new DCCardCSVParser();
		for (int m = 0; m < 12; m ++) {
			int month = m + 3;
			parser.parse(String.format(format, (month / 12) + year, (month % 12) + 1));
			for (TransactionEntry e : parser.getResults()) {
				System.out.println(e.toString());
			}
		}
	}

	public DCCardCSVParser() {
	}

	public List<TransactionEntry> getResults() {
		return entries;
	}

	public void parse(String fileName) {
		entries.clear();

		BufferedReader reader;
		try {
			reader = new BufferedReader(
					new InputStreamReader(
							new FileInputStream(fileName), "Shift_JIS"));
		} catch (FileNotFoundException | UnsupportedEncodingException e) {
			System.err.println(e.getMessage());
			return;
		}

		try {
			String line;
			boolean isEntry = false;
			while ((line = reader.readLine()) != null) {
				if (line.contains(startMark)) {
					isEntry = true;
					continue;
				}
				if (!isEntry) continue;

				// Split CSV items.
				String[] items = line.split("\",\"");
				if (items.length <= 1) continue;

				// Create a new entry instance.
				TransactionEntry entry = new TransactionEntry();
				entries.add(entry);

				// Get transaction date.
				String dateString = Utils.trim(items[0]);
				Matcher matcher = datePattern.matcher(dateString);
				matcher.matches();
				entry.calendar = Calendar.getInstance();
				int year = Integer.valueOf(matcher.group(1));
				int month = Integer.valueOf(matcher.group(2)) - 1;
				int day = Integer.valueOf(matcher.group(3));
				entry.calendar.set(year, month, day);

				// Get transaction detail.
				entry.detail = Utils.trim(items[3]);

				// Get amount
				String amountString = Utils.trim(items[4]);
				entry.amount = Integer.valueOf(amountString.replaceAll(",", ""));
			}
		} catch (IOException e) {
			System.err.println(e.getMessage());
		} finally {
			try { reader.close(); }
			catch (IOException e) {}
		}
	}

}
